#!/bin/sh

. ../config.sh

TIMEFRAMES=`perl -MData::Dumper -MConfig::Any -e 'my $cfg_all = Config::Any->load_files({ files => [qw(fx.yml)], use_ext => 1, flatten_to_hash => 1 } );print join(" ", @{$cfg_all->{"fx.yml"}->{timeframes}->{natural}})'`

echo $$ > /tmp/RatePrinter.exe.pid

# This does two things

# RatePrinter.exe is a windows binary running with wine which uses the FXOrder2Go FXCM API 
# and writes data files to disk
wine ./RatePrinter.exe $FXCM_USER $FXCM_PASSWORD $FXCM_TYPE 2004-01-01 0 $TIMEFRAMES &> /dev/null < /dev/null &
sleep 2

while [ 1 ]; do
  while ( ! ps aux | grep RatePrinter.exe | grep -v grep > /dev/null ); do
      # If RatePrinter.exe stops running, sleep 30 seconds
      # and try to restart it
      sleep 30
      wine ./RatePrinter.exe  $USERNAME $PASSWORD $TYPE 2004-01-01 0 $TIMEFRAMES &> /dev/null < /dev/null &
  done



# 2
# This waits for data files written by RatePrinter.exe and loads them into MySQL
# There are probably race conditions lurking around
# Not sure if RatePrinter locks the files exclusively while writting to them
  for tf in $TIMEFRAMES; do
    if ls /dev/shm/*_$tf &> /dev/null; then
      ./load $tf
    fi
  done
  sleep 5
done
